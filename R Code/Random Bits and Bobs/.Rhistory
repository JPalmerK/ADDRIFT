# whaleGrid$Overlap = whaleGrid$Overlap+
#   ifelse(whaleGrid$cellId %in% bb$cellId, 1,0)
# newLocs = subset(whaleGrid, Overlap>0)
#
# ii=2
# p+
#   geom_point(data = newLocs, aes(x=Lon, y=Lat, fill = Overlap))+
#   geom_path(data = GPSdf[GPSdf$UTC<= sim.calls$UTC[jj],],
#             aes(x=Longitude, y=Latitude, group = DriftName), color='black')+
#   geom_point(data=sim.calls[c(ii,jj),],
#              aes(Lon, Lat), size=3, color='red')
#############################################################
# Get ancillary data
############################################################
library(PAMpal)
colnames(sim.calls)[c(9,10)]<-c('Longitude', 'Latitude')
# Get the data at the instrument with the loudest SNR, the grid center,
# and the whale.
sim.callsLoudestSNR = sim.calls[,c('NearestInstrumentLat',
'NearestInstrumentLon', 'UTC', 'MaxSNR')]
sim.callsLoudestSNR$Treatment = 'InstLocLoudestSNR'
colnames(sim.callsLoudestSNR)[c(1,2)]<-c('Latitude','Longitude')
sim.callsGridCenter = sim.calls[,c('GridCenterLat', 'GridCenterLon',
'UTC','MaxSNR')]
sim.callsGridCenter$Treatment = 'ProbGridCenter'
colnames(sim.callsGridCenter)[c(1,2)]<-c('Latitude','Longitude')
sim.callsWhale = sim.calls[,c('Latitude','Longitude', 'UTC', 'MaxSNR')]
sim.callsWhale$Treatment = 'Truth'
#########################################################################
# Get environmental Data
#########################################################################
# Evaluation data
evalData = rbind(sim.callsLoudestSNR, sim.callsGridCenter, sim.callsWhale)
evalData<-matchEnvData(evalData,nc='erdMBchla8day', var=c('chlorophyll'))
evalData<-matchEnvData(evalData,nc='jplMURSST41mday', var=c('sst'))
evalData<-matchEnvData(evalData,nc='erdMH1pp8day', var=c('productivity'))
evalData<-matchEnvData(evalData,nc='erdSrtm30plusSeafloorGradient',
var=c('magnitude_gradient','sea_floor_depth' ))
evalData<-matchEnvData(evalData,nc='HYCOM',
var=c('salinity', 'water_u', 'water_v'))
# Assuming you have ggplot2 and tidyverse installed
library(ggplot2)
# Your dataframe
# Replace this with your actual dataframe
your_dataframe <- data.frame(
Lat = c(...),  # Replace ... with your actual data
Lon = c(...),
Density = c(...)
)
# Assuming you have ggplot2 and tidyverse installed
library(ggplot2)
# Your dataframe
# Replace this with your actual dataframe
your_dataframe <- data.frame(
Lat = c(...),  # Replace ... with your actual data
Lon = c(...),
Density = c(...)
)
gridArea$truthPred = predict.gam(mod.truth, newdata = gridArea,type = "response")
library(mgcv)
library(ggplot2)
gridArea$truthPred = predict.gam(mod.truth, newdata = gridArea,type = "response")
= ssh.mean
setwd("~/GitHub/SWFSC Processing")
load("~/GitHub/SWFSC Processing/SpatialAnalysisSim.RData")
gridArea$gridDiff_truthNorm = gridArea$trueDen- gridArea$CallDen
ggplot(gridArea, aes(y=Lat, x=Lon))+
geom_tile(aes(fill = gridDiff_truthNorm))+
scale_fill_gradient2()
gridArea$gridDiff_truthNorm = gridArea$trueDen- gridArea$CallDen
gridArea$gridDiff_truthNorm = gridArea$gridDiff_truthNorm-mean(gridArea$gridDiff_truthNorm)
ggplot(gridArea, aes(y=Lat, x=Lon))+
geom_tile(aes(fill = gridDiff_truthNorm))+
scale_fill_gradient2()
ggplot(gridArea)+
geom_tile(aes(y=Lat, x=Lon, fill = ssh.mean))+
geom_contour(aes(x=Lon, y=Lat, z = CallDen,
color = ..level..),
color = 'red', bins = 2, size =1.5)
mod.truth= gam(data=  gridArea,
trueDen~ te(Lon,Lat)+s(sst.mean)+s(ssh.mean)+s(ild.mean),
family = nb())
plot.gam(mod.truth, pages = 1, se = TRUE,
main = 'True Density Tweedie',shade = TRUE)
mod.truth= gam(data=  gridArea,
log(trueDen)~ te(Lon,Lat)+s(sst.mean)+s(ssh.mean)+s(ild.mean))
plot.gam(mod.truth, pages = 1, se = TRUE,
main = 'True Density negative binomial',shade = TRUE)
mod.truth= gam(data=  gridArea,
log(trueDen)~ te(Lon,Lat)+s(sst.mean)+s(ssh.mean)+s(ild.mean))
plot.gam(mod.truth, pages = 1, se = TRUE,
main = 'True Density negative log normal',shade = TRUE)
# Not awful...
mod= gam(data=  gridArea, log(CallDen)~ te(Lon,Lat)+s(sst.mean)+s(ssh.mean))
plot.gam(mod, pages = 1, se = TRUE,shade = TRUE,
main = 'Predicted Normalized Call Density log Normal')
# Not awful...
mod= gam(data=  gridArea, log(CallDen)~ te(Lon,Lat)+s(sst.mean)+s(idl.mean))
# Not awful...
mod= gam(data=  gridArea, log(CallDen)~ te(Lon,Lat)+s(sst.mean)+s(ild.mean))
plot.gam(mod, pages = 1, se = TRUE,shade = TRUE,
main = 'Predicted Normalized Call Density log Normal')
# Not awful...
mod= gam(data=  gridArea, log(CallDen)~ te(Lon,Lat)+s(sst.mean)+s(ssh.mean)+s(ild.mean))
plot.gam(mod, pages = 1, se = TRUE,shade = TRUE,
main = 'Predicted Normalized Call Density log Normal')
# Not awful...
mod= gam(data=  gridArea,
log(NormCallDen)~ te(Lon,Lat)+s(sst.mean)+s(ssh.mean)+s(ild.mean))
plot.gam(mod, pages = 1, se = TRUE,shade = TRUE,
main = 'Predicted Normalized Call Density log Normal')
# Not awful...
mod= gam(data=  gridArea,
log(NormCallDen)~ te(Lon,Lat)+s(sst.mean)+s(ssh.mean)+s(ild.mean))
plot.gam(mod, pages = 1, se = TRUE,shade = TRUE,
main = 'Predicted Normalized Call Density log Normal')
gridArea$truthPred = predict.gam(mod.truth, newdata = gridArea,type = "response")
gridArea$simPred = predict.gam(mod, newdata = gridArea,type = "response")
ggplot(gridArea)+
geom_point(aes(x=truthPred, y= (simPred)))
gridArea$gridDiff_truthNorm = gridArea$trueDen- gridArea$truthPred
gridArea$gridDiff_truthNorm = gridArea$gridDiff_truthNorm-
mean(gridArea$gridDiff_truthNorm, na.rm = TRUE)
ggplot(gridArea)+
geom_tile(aes(x=Lon, y=Lat, fill =gridDiff_truthNorm))+
scale_fill_viridis_c()
exp(log(200))
gridArea$truthPred = exp(predict.gam(mod.truth, newdata = gridArea,
type = "response"))
gridArea$simPred = exp(predict.gam(mod, newdata = gridArea,type = "response"))
ggplot(gridArea)+
geom_point(aes(x=truthPred, y= (simPred)))
gridArea$gridDiff_truthNorm = gridArea$trueDen- gridArea$truthPred
ggplot(gridArea)+
geom_tile(aes(x=Lon, y=Lat, fill =gridDiff_truthNorm))+
scale_fill_viridis_c()
gridArea$gridDiff_truthNorm = (gridArea$trueDen- gridArea$truthPred)/
mean((gridArea$trueDen- gridArea$truthPred))
ggplot(gridArea)+
geom_tile(aes(x=Lon, y=Lat, fill =gridDiff_truthNorm))+
scale_fill_viridis_c()
gridArea$gridDiff_truthNorm = (gridArea$trueDen- gridArea$truthPred)/
mean(gridArea$trueDen- gridArea$truthPred)
head(gridArea$gridDiff_truthNorm)
head(gridArea$trueDen)
gridArea$gridDiff_truthNorm = (gridArea$simPred- gridArea$truthPred)/
mean(gridArea$simPred- gridArea$truthPred)
head(gridArea$trueDen)
gridArea$gridDiff_truthNorm = (gridArea$simPred- gridArea$truthPred)/
mean(gridArea$simPred- gridArea$truthPred)
ggplot(gridArea)+
geom_tile(aes(x=Lon, y=Lat, fill =gridDiff_truthNorm))+
scale_fill_gradient2()
(gridArea$simPred- gridArea$truthPred)/
mean(gridArea$simPred- gridArea$truthPred)
gridArea$gridDiff_truthNorm = (gridArea$simPred- gridArea$truthPred)/
mean(gridArea$simPred- gridArea$truthPred, na.rm = TRUE)
ggplot(gridArea)+
geom_tile(aes(x=Lon, y=Lat, fill =gridDiff_truthNorm))+
scale_fill_gradient2()
gridArea$gridDiff_truthNorm = (gridArea$simPred- gridArea$truthPred)
ggplot(gridArea)+
geom_tile(aes(x=Lon, y=Lat, fill =gridDiff_truthNorm))+
scale_fill_gradient2()
# Not awful...
mod= gam(data=  gridArea,
log(CallDen)~ te(Lon,Lat)+s(sst.mean)+s(ssh.mean)+s(ild.mean))
plot.gam(mod, pages = 1, se = TRUE,shade = TRUE,
main = 'Predicted Normalized Call Density log Normal')
gridArea$truthPred = exp(predict.gam(mod.truth, newdata = gridArea,
type = "response"))
gridArea$simPred = exp(predict.gam(mod, newdata = gridArea,type = "response"))
gridArea$gridDiff_truthNorm = (gridArea$simPred- gridArea$truthPred)
ggplot(gridArea)+
geom_tile(aes(x=Lon, y=Lat, fill =gridDiff_truthNorm))+
scale_fill_gradient2()
gridArea$gridDiff_truthNorm = (gridArea$simPred- gridArea$truthPred)/
mean((gridArea$simPred- gridArea$truthPred), na.rm = TRUE)
gridArea$gridDiff_truthNorm = (gridArea$simPred- gridArea$truthPred)/
mean((gridArea$simPred- gridArea$truthPred), na.rm = TRUE)
ggplot(gridArea)+
geom_tile(aes(x=Lon, y=Lat, fill =gridDiff_truthNorm))+
scale_fill_gradient2()
mod.truth= gam(data=  gridArea,
trueDen~ te(Lon,Lat)+s(sst.mean)+s(ssh.mean)+s(ild.mean))
plot.gam(mod.truth, pages = 1, se = TRUE,
main = 'True Density negative log normal',shade = TRUE)
# Not awful...
mod= gam(data=  gridArea,
CallDen~ te(Lon,Lat)+s(sst.mean)+s(ssh.mean)+s(ild.mean))
plot.gam(mod, pages = 1, se = TRUE,shade = TRUE,
main = 'Predicted Normalized Call Density log Normal')
gridArea$truthPred = (predict.gam(mod.truth,
newdata = gridArea,
type = "response"))
gridArea$simPred = (predict.gam(mod,
newdata = gridArea,
type = "response"))
gridArea$gridDiff_truthNorm = (gridArea$simPred- gridArea$truthPred)/
mean((gridArea$simPred- gridArea$truthPred), na.rm = TRUE)
ggplot(gridArea)+
geom_tile(aes(x=Lon, y=Lat, fill =gridDiff_truthNorm))+
scale_fill_gradient2()
mod.truth= gam(data=  gridArea,
trueDen~ te(Lon,Lat)+s(sst.mean)+s(ssh.mean)+s(ild.mean),
family = tw())
plot.gam(mod.truth, pages = 1, se = TRUE,
main = 'True Density negative log normal',shade = TRUE)
# Not awful...
mod= gam(data=  gridArea,
CallDen~ te(Lon,Lat)+s(sst.mean)+s(ssh.mean)+s(ild.mean),
family =tw())
plot.gam(mod, pages = 1, se = TRUE,shade = TRUE,
main = 'Predicted Normalized Call Density log Normal')
gridArea$truthPred = (predict.gam(mod.truth,
newdata = gridArea,
type = "response"))
gridArea$simPred = (predict.gam(mod,
newdata = gridArea,
type = "response"))
gridArea$gridDiff_truthNorm = (gridArea$simPred- gridArea$truthPred)/
mean((gridArea$simPred- gridArea$truthPred), na.rm = TRUE)
ggplot(gridArea)+
geom_tile(aes(x=Lon, y=Lat, fill =gridDiff_truthNorm))+
scale_fill_gradient2()
gridArea$gridDiff_truthNorm = (gridArea$simPred- gridArea$truthPred)
ggplot(gridArea)+
geom_tile(aes(x=Lon, y=Lat, fill =gridDiff_truthNorm))+
scale_fill_gradient2()
# Not awful...
mod= gam(data=  gridArea,
NormCallDen~ te(Lon,Lat)+s(sst.mean)+s(ssh.mean)+s(ild.mean),
family =tw())
plot.gam(mod, pages = 1, se = TRUE,shade = TRUE,
main = 'Predicted Normalized Call Density log Normal')
gridArea$truthPred = (predict.gam(mod.truth,
newdata = gridArea,
type = "response"))
gridArea$simPred = (predict.gam(mod,
newdata = gridArea,
type = "response"))
gridArea$gridDiff_truthNorm = (gridArea$simPred- gridArea$truthPred)/
mean((gridArea$simPred- gridArea$truthPred), na.rm = TRUE)
ggplot(gridArea)+
geom_tile(aes(x=Lon, y=Lat, fill =gridDiff_truthNorm))+
scale_fill_gradient2()
mod.truth= gam(data=  gridArea,
trueDen~ te(Lon,Lat)+s(sst.mean)+s(ssh.mean)+s(ild.mean),
family = tw())
plot.gam(mod.truth, pages = 1, se = TRUE,
main = 'True Density negative log normal',shade = TRUE)
# Not awful...
mod= gam(data=  gridArea,
NormCallDen~ te(Lon,Lat)+s(sst.mean)+s(ssh.mean)+s(ild.mean),
family =tw())
plot.gam(mod, pages = 1, se = TRUE,shade = TRUE,
main = 'Predicted Normalized Call Density log Normal')
gridArea$truthPred = (predict.gam(mod.truth,
newdata = gridArea,
type = "response"))
gridArea$simPred = (predict.gam(mod,
newdata = gridArea,
type = "response"))
mod.truth= gam(data=  gridArea,
trueDen~ te(Lon,Lat)+s(sst.mean)+s(ssh.mean)+s(ild.mean),
family = tw())
plot.gam(mod.truth, pages = 1, se = TRUE,
main = 'True Density negative log normal',shade = TRUE)
# Not awful...
mod= gam(data=  gridArea,
NormCallDen~ te(Lon,Lat)+s(sst.mean)+s(ssh.mean)+s(ild.mean),
family =tw())
plot.gam(mod, pages = 1, se = TRUE,shade = TRUE,
main = 'Predicted Normalized Call Density log Normal')
gridArea$truthPred = (predict.gam(mod.truth,
newdata = gridArea,
type = "response"))
gridArea$simPred = (predict.gam(mod,
newdata = gridArea,
type = "response"))
ggplot(gridArea)+
geom_tile(aes(x=Lon, y=Lat, fill =gridDiff_truthNorm))+
scale_fill_gradient2()
mod.truth= gam(data=  gridArea,
trueDen~ te(Lon,Lat)+s(sst.mean)+s(ssh.mean),
#trueDen~ te(Lon,Lat)+s(sst.mean)+s(ssh.mean)+s(ild.mean),
family = tw())
plot.gam(mod.truth, pages = 1, se = TRUE,
main = 'True Density negative log normal',shade = TRUE)
# Not awful...
mod= gam(data=  gridArea,
#NormCallDen~ te(Lon,Lat)+s(sst.mean)+s(ssh.mean)+s(ild.mean),
NormCallDen~ te(Lon,Lat)+s(sst.mean)+s(ssh.mean),
family =tw())
plot.gam(mod, pages = 1, se = TRUE,shade = TRUE,
main = 'Predicted Normalized Call Density log Normal')
gridArea$truthPred = (predict.gam(mod.truth,
newdata = gridArea,
type = "response"))
gridArea$simPred = (predict.gam(mod,
newdata = gridArea,
type = "response"))
gridArea$gridDiff_truthNorm = (gridArea$simPred- gridArea$truthPred)/
mean((gridArea$simPred- gridArea$truthPred), na.rm = TRUE)
ggplot(gridArea)+
geom_tile(aes(x=Lon, y=Lat, fill =gridDiff_truthNorm))+
scale_fill_gradient2()
gridArea$gridDiff_truthNorm = (gridArea$simPred- gridArea$truthPred)/
mean((gridArea$simPred- gridArea$truthPred), na.rm = TRUE)
ggplot(gridArea)+
geom_tile(aes(x=Lon, y=Lat, fill =gridDiff_truthNorm))+
scale_fill_gradient2()
ggplot(gridArea)+
geom_tile(aes(x=Lon, y=Lat, fill =simPred))+
scale_fill_viridis_c()
ggplot(gridArea)+
geom_tile(aes(x=Lon, y=Lat, fill =simPred))+
scale_fill_v()+
geom_density_2d(data= sim.calls,
aes(x=Lon, y=Lat),
color = "green", alpha = 1)
ggplot(gridArea)+
geom_tile(aes(x=Lon, y=Lat, fill =simPred))+
scale_fill_viridis_c()+
geom_density_2d(data= sim.calls,
aes(x=Lon, y=Lat),
color = "green", alpha = 1)
ggplot(gridArea)+
geom_tile(aes(x=Lon, y=Lat, fill =truthPred))+
scale_fill_viridis_c()+
geom_density_2d(data= sim.calls,
aes(x=Lon, y=Lat),
color = "green", alpha = 1)
# Not awful...
mod= gam(data=  gridArea,
#NormCallDen~ te(Lon,Lat)+s(sst.mean)+s(ssh.mean)+s(ild.mean),
CallDen~ te(Lon,Lat)+s(sst.mean)+s(ssh.mean),
family =tw())
plot.gam(mod, pages = 1, se = TRUE,shade = TRUE,
main = 'Predicted Normalized Call Density log Normal')
gridArea$truthPred = (predict.gam(mod.truth,
newdata = gridArea,
type = "response"))
gridArea$simPred = (predict.gam(mod,
newdata = gridArea,
type = "response"))
gridArea$gridDiff_truthNorm = (gridArea$simPred- gridArea$truthPred)/
mean((gridArea$simPred- gridArea$truthPred), na.rm = TRUE)
ggplot(gridArea)+
geom_tile(aes(x=Lon, y=Lat, fill =gridDiff_truthNorm))+
scale_fill_gradient2()
ggplot(gridArea)+
geom_tile(aes(x=Lon, y=Lat, fill =simPred))+
scale_fill_viridis_c()+
geom_density_2d(data= sim.calls,
aes(x=Lon, y=Lat),
color = "green", alpha = 1)
# Model
mod= gam(data=  gridArea,
#NormCallDen~ te(Lon,Lat)+s(sst.mean)+s(ssh.mean)+s(ild.mean),
CallDen~ te(Lon,Lat)+s(sst.mean)+s(ssh.mean),
family =nb())
plot.gam(mod, pages = 1, se = TRUE,shade = TRUE,
main = 'Predicted Normalized Call Density log Normal')
gridArea$simPred = (predict.gam(mod,
newdata = gridArea,
type = "response"))
ggplot(gridArea)+
geom_tile(aes(x=Lon, y=Lat, fill =simPred))+
scale_fill_viridis_c()+
geom_density_2d(data= sim.calls,
aes(x=Lon, y=Lat),
color = "green", alpha = 1)
# Model
mod= gam(data=  gridArea,
#NormCallDen~ te(Lon,Lat)+s(sst.mean)+s(ssh.mean)+s(ild.mean),
NormCallDen~ te(Lon,Lat)+s(sst.mean)+s(ssh.mean),
family =nb())
plot.gam(mod, pages = 1, se = TRUE,shade = TRUE,
main = 'Predicted Normalized Call Density log Normal')
gridArea$simPred = (predict.gam(mod,
newdata = gridArea,
type = "response"))
ggplot(gridArea)+
geom_tile(aes(x=Lon, y=Lat, fill =simPred))+
scale_fill_viridis_c()+
geom_density_2d(data= sim.calls,
aes(x=Lon, y=Lat),
color = "green", alpha = 1)
mod.truth= gam(data=  gridArea,
trueDen~ te(Lon,Lat)+s(sst.mean)+s(ssh.mean),
#trueDen~ te(Lon,Lat)+s(sst.mean)+s(ssh.mean)+s(ild.mean),
family = nb())
plot.gam(mod.truth, pages = 1, se = TRUE,
main = 'True Density negative log normal',shade = TRUE)
gridArea$truthPred = (predict.gam(mod.truth,
newdata = gridArea,
type = "response"))
ggplot(gridArea)+
geom_tile(aes(x=Lon, y=Lat, fill =truthPred))+
scale_fill_viridis_c()+
geom_density_2d(data= sim.calls,
aes(x=Lon, y=Lat),
color = "green", alpha = 1)
ggplot(gridArea)+
geom_tile(aes(x=Lon, y=Lat, fill =simPred))+
scale_fill_viridis_c()+
geom_density_2d(data= sim.calls,
aes(x=Lon, y=Lat),
color = "green", alpha = 1)
ggplot(gridArea)+
geom_tile(aes(x=Lon, y=Lat, fill =simPred))+
scale_fill_viridis_c()+
geom_density_2d(data= sim.calls,
aes(x=Lon, y=Lat),
color = "green", alpha = 1)+
geom_point(data= GPSdf, aes(x=Longitude, y= Latitude),
color ='yellow', size =0.75)
ggplot(gridArea)+
geom_tile(aes(x=Lon, y=Lat, fill =g_r))+
scale_fill_viridis_c()+
geom_contour(aes(x=Lon, y=Lat, z =g_r, color = ..level..),
color = 'black', breaks = quantile(gridArea$g_r), size =1) +
geom_point(data= GPSdf, aes(x=Longitude, y= Latitude),
color ='yellow', size =0.75)+
geom_contour(aes(x=Lon, y=Lat, z =gridArea$g_r, color = ..level..),
color = 'red', bins = 3, size =1)+
ggtitle('Survey Effort')
# Simulation Model
mod= gam(data=  gridArea,
#NormCallDen~ te(Lon,Lat)+s(sst.mean)+s(ssh.mean)+s(ild.mean),
CallDen~ te(Lon,Lat)+s(sst.mean)+s(ssh.mean),
family =nb(), weights = TotMonitored)
# plot.gam(mod, pages = 1, se = TRUE,shade = TRUE,
#          main = 'Predicted Normalized Call Density log Normal')
gridArea$simPred = (predict.gam(mod,
newdata = gridArea,
type = "response"))
ggplot(gridArea)+
geom_tile(aes(x=Lon, y=Lat, fill =simPred))+
scale_fill_viridis_c()+
geom_density_2d(data= sim.calls,
aes(x=Lon, y=Lat),
color = "green", alpha = 1)
ggplot(gridArea)+
geom_tile(aes(x=Lon, y=Lat, fill =TotMonitored))+
scale_fill_viridis_c()+
geom_contour(aes(x=Lon, y=Lat, z =TotMonitored, color = ..level..),
color = 'black', breaks = quantile(gridArea$TotMonitored), size =1) +
geom_point(data= GPSdf, aes(x=Longitude, y= Latitude),
color ='yellow', size =0.75)+
geom_contour(aes(x=Lon, y=Lat, z =gridArea$TotMonitored, color = ..level..),
color = 'red', bins = 3, size =1)+
ggtitle('Survey Effort')
mod.truth= gam(data=  gridArea,
trueDen~ te(Lon,Lat)+s(sst.mean)+s(ssh.mean),
#trueDen~ te(Lon,Lat)+s(sst.mean)+s(ssh.mean)+s(ild.mean),
family = nb())
plot.gam(mod.truth, pages = 1, se = TRUE,
main = 'True Density negative log normal',shade = TRUE)
gridArea$truthPred = (predict.gam(mod.truth,
newdata = gridArea,
type = "response"))
ggplot(gridArea)+
geom_tile(aes(x=Lon, y=Lat, fill =truthPred))+
scale_fill_viridis_c()+
geom_density_2d(data= sim.calls,
aes(x=Lon, y=Lat),
color = "green", alpha = 1)
ggplot(gridArea)+
geom_tile(aes(x=Lon, y=Lat, fill =truthPred))+
scale_fill_viridis_c()+
geom_density_2d(data= sim.calls,
aes(x=Lon, y=Lat),
color = "green", alpha = 1)+
ggtitle('Truth')
ggplot(gridArea)+
geom_tile(aes(x=Lon, y=Lat, fill =truthPred))+
scale_fill_viridis_c()+
geom_density_2d(data= sim.calls,
aes(x=Lon, y=Lat),
color = "green", alpha = 1)+
geom_point(data= GPSdf, aes(x=Longitude, y= Latitude),
color ='yellow', size =0.75)+
ggtitle('Truth')
# Simulation Model
mod= gam(data=  gridArea,
#NormCallDen~ te(Lon,Lat)+s(sst.mean)+s(ssh.mean)+s(ild.mean),
NormCallDen~ te(Lon,Lat)+s(sst.mean)+s(ssh.mean),
family =nb())
# plot.gam(mod, pages = 1, se = TRUE,shade = TRUE,
#          main = 'Predicted Normalized Call Density log Normal')
gridArea$simPred = (predict.gam(mod,
newdata = gridArea,
type = "response"))
ggplot(gridArea)+
geom_tile(aes(x=Lon, y=Lat, fill =simPred))+
scale_fill_viridis_c()+
geom_density_2d(data= sim.calls,
aes(x=Lon, y=Lat),
color = "green", alpha = 1)+
geom_point(data= GPSdf, aes(x=Longitude, y= Latitude),
color ='yellow', size =0.75)
ggplot(gridArea)+
geom_tile(aes(x=Lon, y=Lat, fill =simPred))+
scale_fill_viridis_c()+
geom_density_2d(data= sim.calls,
aes(x=Lon, y=Lat),
color = "green", alpha = 1)+
geom_point(data= GPSdf, aes(x=Longitude, y= Latitude),
color ='yellow', size =0.75)+
ggtitle('Model Predictions with Truth Contours')
